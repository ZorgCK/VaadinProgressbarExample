
package com.company.progressbarexample.ui;

import java.util.Date;
import java.util.Timer;

import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.page.Push;
import com.vaadin.flow.component.progressbar.ProgressBar;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;
import com.vaadin.flow.shared.communication.PushMode;


@Route("")
@Push(value = PushMode.MANUAL)
public class MainLayout extends VerticalLayout implements PageConfigurator
{
	public MainLayout()
	{
		super();
		this.initUI();
		
		this.progressBar.setMin(0);
		this.progressBar.setMax(20);
	}
	
	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		final UI ui = UI.getCurrent();
		
		final Timer timer = new Timer();

		final DemoTask demoTask = new DemoTask();
		demoTask.onProgress(i -> {
			ui.access(() -> {
				this.progressBar.setValue(i);
				ui.push();
			});
		});

		timer.schedule(demoTask, new Date());

	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.progressBar = new ProgressBar();
		this.button      = new Button();

		this.button.setText("Button");

		this.progressBar.setWidth(null);
		this.progressBar.setHeight("28px");
		this.button.setSizeUndefined();
		this.add(this.progressBar, this.button);
		this.setSizeFull();

		this.button.addClickListener(this::button_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button      button;
	private ProgressBar progressBar;
	// </generated-code>
	
}
